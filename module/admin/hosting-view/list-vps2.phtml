<style>
    .action0{
        width: 100px !important;
    }

</style>

<section id="show_action_multi_item" style="">
    <div class="sub_multi" style="">
        <div id="number_item_select"></div>
        <button> Delete </button>
        <button onclick="clsTree.openModalMoveItem(false, 'file')"> Move </button>
        <button onclick="clsTree.openModalAddMultiFolder()"> Add To Folder </button>
        <div id="close_multi_action" style="float: right" > [X] </div>
    </div>
</section>


<?php

use Base\modelIpHosting;



$tStart = microtime(1);

//echo "\n GUID: $useridSet / $gidSet";

//$apiUrl = "/a_p_i/admin-vps-list";

\Base\modelHostingVps::updateVMStatus();

$params = \Base\ClassRoute::getArrParams();
$paramsPost = $_POST;
clsDbTableMng::$gidCurrent = getCurrentGid();
clsDbTableMng::$class = \Base\modelHostingVps::class;


clsDbTableMng::setAllowAddButton(1);
clsDbTableMng::setAllowSaveButtonOnEdit(1);
clsDbTableMng::setUrlEditActionInList("/admin/hosting/view-vps");
clsDbTableMng::setUrlApi("/a_p_i/admin-vps-list");
clsDbTableMng::$optAddNewUrl = "/admin/hosting/add-vps";


$obj1 = new clsDbTableMng::$class;
if ($obj1 instanceof \Base\modelBaseMongo) ;


$urlOrg = ctoolUrl::getUriWithoutParam();
$cl = \Base\modelHostingVps::class;
$link = $urlOrg;

function hookOpenConsoleVm($val){
    $randId = qqgetRandFromId($val);
    $str = "<a title='Open console Vps' target='_blank' class=\"fa fa-desktop\" href='' onclick=\"window.open('/member/hosting/console/vid/$randId', 
                         'newwindow$val', 
                         'toolbar=no, menubar=no, resizable=yes,width=1024,height=750'); 
              return false;\"></a> ";
    return " $str ";
}
clsDbTableMng::$functionHook['vmName'] = 'hookOpenConsoleVm';



//echo "<br/>\n";
?>


<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        <?php

        ?>
        <a href="<?php echo $link ?>">
            Admin-ListVPS
        </a>

        <small> |
            <?php

            if (isAdmin_()) {
                $link1 = "/admin/db-mng?modelDb=" . urlencode(clsDbTableMng::$class) . "&meta_mng=1";
                echo "<a target='_blank' href='$link1'> [MetaMng]</a>";
            }


            $linkRescan = ctoolUrl::setUrlParam(ctoolUrl::getUriWithoutParam(), 'rescan_vm', 1);
            ?>

            <a href="<?php echo $linkRescan ?>">
                [ ReScan From VCenter ]
            </a>
        </small>
    </h1>

    <ol class="breadcrumb">
        <li>
            <?php

            $pad = '';
            if(isset($params['delete_list']))
                $pad = "style = 'color: red; font-size: 30px'";

            echo "<a $pad href='$link?delete_list=1' class='fa fa-2x fa-trash'>  </a> ";
            ?>
        </li>
    </ol>

</section>

<!-- Main content -->
<section class="content">
    <div style='width: 100%; background-color: ; border: 0px solid grey; padding: 0px; overflow-x:auto;'>
    <?php
    $mmNewVm = [];
    $mmVmDb = [];
    $mmAllInVc = [];
    $ovps1 = new \Base\modelHostingVps();
    if (ctoolUrl::getParamInUrl('rescan_vm')) {

        $mmVmDb = $ovps1->getArrWhere();
//        echo "<pre> >>> " . __FILE__ . "(" . __LINE__ . ")<br/>";
//        print_r($mmVmDb);
//        echo "</pre>";

        echo "\n <h3> Rescan VM: </h3>";

        $file = "/var/ufile_cms2017LAD/vsphere-automation-sdk-java/test1";

        $un = getUserVcFromFile($file)[0];
        $pw = getUserVcFromFile($file)[1];

        $domain = "vc.glx";
        ClassVMwareTool::loginVCCache($domain, $un, $pw);
        //ClassVMwareTool::loginVC($domain, $un, $pw);

        $mhost = ClassVMwareTool::getHostList();
        if(!$mhost){
            bl("Error, not found host? ");
            goto _END;
        }

        $cc = 0;
        $vmList = [];
        foreach ($mhost AS $objh) {
            $cc++;
//        //$vmList1 = ClassVMwareTool::getVMListPowerOn('name', "?filter.hosts.1=$objh->host");
            $vmList1 = ClassVMwareTool::getVMList(null, 'name', "?filter.hosts.1=$objh->host");
            $vmList = array_merge($vmList, $vmList1);
        }

//    $vmList = ClassVMwareTool::getVMList(null, 'name');

        foreach ($vmList AS $vm) {
            if ($vm instanceof ClassVMinfo) ;
            foreach ($mhost AS $host) {
                if ($vm->hostId == $host->host) {
                    $vm->hostName = $host->name;
                }
            }
        }

        foreach ($vmList AS $vm) {
            if ($vm instanceof ClassVMinfo) ;
            $ovps = new \Base\modelHostingVps();
            //$oDel = new \Base\modelHostingVpsDelete();

            $vps = new \Base\modelHostingVps();
            $vps->vmId = $vm->vm;
            $vps->vmName = $vm->name;
            $vps->hostId = $vm->hostId;
            $vps->hostName = $vm->hostName;
            $vps->nCore = $vm->cpu_count;
            $vps->memorySize = $vm->memory_size_MiB;
            if($vm->isOn()){
                $vps->lastStatusOnOff = 1;
            }
            if($vm->isOff()){
                $vps->lastStatusOnOff = -1;
            }

            $mmAllInVc[] = $vps;

            if ($ovps->getOneWhere(['vmId' => $vm->vm])) {
                //$mmVmDb = [$ovps];
                //echo "<br/>\n Found : $ovps->vmName";
                if ($vm->isOff())
                    $ovps->lastStatusOnOff = -1;
                else
                    $ovps->lastStatusOnOff = 1;
                if (!$ovps->ipList) {
                    $m1 = explode("-", $ovps->vmName);
                    $ipX = end($m1);

                    if (substr($ipX, 0, 4) == '121.') {
                        $ovps->ipList = $ipX;
                    }
                }
                //$ovps->updateMe();

            }
//            elseif ($oDel->getOneWhere(['vmId' => $vm->vm])) {
//                //$mmVmDb = [$ovps];
//                //echo "<br/>\n Found : $ovps->vmName";
//                if ($vm->isOff())
//                    $oDel->lastStatusOnOff = -1;
//                else
//                    $oDel->lastStatusOnOff = 1;
//                if (!$oDel->ipList) {
//                    $m1 = explode("-", $oDel->vmName);
//                    $ipX = end($m1);
//
//                    if (substr($ipX, 0, 4) == '121.') {
//                        $oDel->ipList = $ipX;
//                    }
//                }
//                //$ovps->updateMe();
//
//            }

            else {
                //echo "<br/>\n New VM: $ovps->vmName";
                $ovps->vmId = $vm->vm;
                $ovps->vmName = $vm->name;
                $ovps->hostId = $vm->hostId;
                $ovps->hostName = $vm->hostName;
                $ovps->nCore = $vm->cpu_count;
                $ovps->memorySize = $vm->memory_size_MiB;
                $ovps->createdAt = nowyh();
                if($vm->isOn())
                    $ovps->lastStatusOnOff = 1;
                if($vm->isOff())
                    $ovps->lastStatusOnOff = -1;
                $mmNewVm[] = $ovps;
                //$ovps->insert();
            }
        }


//echo "<pre> >>> " . __FILE__ . "(" . __LINE__ . ")<br/>";
//print_r($mmAllInVc);
//echo "</pre>";

//echo "<pre> >>> " . __FILE__ . "(" . __LINE__ . ")<br/>";
//print_r($mmVmDb);
//echo "</pre>";

        echo "\n - <b> Thấy </b>: " . count($mmAllInVc) . " VM trong VCenter";
        echo "<br/>\n - <b>Trong DB đã lưu </b>: " . count($mmVmDb) . " ";

        echo "<br/>\n - <b>Số VM mới: </b> <span style='color: red'> " . count($mmNewVm) . " </span> ";
        if(!count($mmNewVm))
            echo "\n <b style='color: green'> (các VM đã được import vào DB!)</b>";

        $cc = 0;
        foreach ($mmNewVm AS $vpsNew){
            if($vpsNew instanceof \Base\modelHostingVps)
            $cc++;
            echo "<br/>\n  + $cc. New name: '$vpsNew->vmName' ($vpsNew->vmId)";
            if(isset($params['update_now'])){
                if(!\Base\modelHostingVps::getOneWhereStatic(['vmId'=>$vpsNew->vmId])){
                    $vpsNew->insert();
                }
            }

        }

        $nChange = $cc =0;
        //for($i = 0; $i<count($mmAllInVc); $i++){

        echo "<br/>\n";
        echo "<br/>\n <h3> Các cập nhật mới của VM: </h3> ";

        foreach ($mmAllInVc AS $vpsInVc){

            //$vpsInVc = $mmAllInVc[$i];

            if($vpsInVc instanceof \Base\modelHostingVps);
            foreach ($mmVmDb AS $vpsDb){
                if($vpsDb instanceof \Base\modelHostingVps);
                if($vpsDb->vmId == $vpsInVc->vmId){
                    $mCompare = ['vmName','nCore','memorySize','hostId','hostName','lastStatusOnOff'];

//                    echo "<pre> >>> " . __FILE__ . "(" . __LINE__ . ")<br/>";
//                    print_r($vpsDb);
//                    echo "</pre>";
//
//                    echo "<pre> >>> " . __FILE__ . "(" . __LINE__ . ")<br/>";
//                    print_r($vpsInVc);
//                    echo "</pre>";

                    if($mdif = $vpsDb->getDiffArr($vpsInVc, $mCompare)){
                        $nChange++;
                        $cc++;
//                        echo "<pre> >>> " . __FILE__ . "(" . __LINE__ . ")<br/>";
//                        print_r($vpsDb);
//                        echo "</pre>";
//                        echo "<pre> >>> " . __FILE__ . "(" . __LINE__ . ")<br/>";
//                        print_r($vpsInVc);
//                        echo "</pre>";
//                        echo "<br/>\n";
                        echo "<br> <b> $cc. VM: $vpsDb->vmId / $vpsDb->vmName </b>";
                        foreach ($mdif AS $key=>$mValue){
                            echo "<br/>\n Change <u>  $key </u>: From: ". $mValue[0] . " => To : " . $mValue[1];
                            //foreach ($mV)
                            if(isset($params['update_now']))
                                $vpsDb->$key = $mValue[1];
                        }

                        if(isset($params['update_now'])){
                            $vpsDb->updateMe();
                        }
                    }
                }


            }
        }

        if($nChange){
            echo "\n <b>+ Có $nChange VM thay đổi trạng thái như trên!</b> ";
        }
        else{
            echo "\n <b style='color: green'>- Không có thay đổi Thông tin VM cũ so với DB!</b> ";
        }

        if($nChange || count($mmNewVm)){

            echo "<br/>\n";
            $linkUpdate = ctoolUrl::setUrlParam(null, 'update_now', 1);
            echo "<br/>\n <b style='color: red'>Bạn có cập nhật các thay đổi trên không? </b>  <a href='$linkUpdate'> Cập nhật ngay </a> </b>";
        }
        goto  _END;
    }

    ?>

        <?php
        /// extra block

        //echo "Đại lý: <input type='text'>";

        ?>


        <?php

        //$apiUrl = "/a_p_i/admin/mng-db-table?modelDb=" . urlencode(clsDbTableMng::$class);


        clsDbTableMng::getInsertFormPost();

        if (isset($params['insert_item'])) {

            echo "<br/>\n";
            clsDbTableMng::showInsertForm();
            echo "<br/>\n";
            goto _END;
        }

        if (isset($params['edit_item'])) {
            echo "<br/>\n";
            clsDbTableMng::showEditForm();
            echo "<br/>\n";
            goto _END;
        }

        //$obj1 = new modelDemo1Mongo();
        if (!ctoolUrl::getParamInUrl('meta_mng')) {
            clsDbTableMng::getFilterSearchUI();
            echo "<br/>\n";
        }

        clsDbTableMng::showTableData1();

        _END:
        ?>
    </div>
</section>
<!-- /.content -->


<?php
if(isAdmin_())
    echo "\n\n === DTime Process = " . (microtime(1) - $tStart) . " Seconds ";

?>

<script>

    clsDataTblMng.apiUrl = '<?php echo clsDbTableMng::getUrlApi()?>';

    $( function() {
        $( "[name=expiredAt]" ).datepicker({ dateFormat: 'yy-mm-dd' });
    } );

</script>
